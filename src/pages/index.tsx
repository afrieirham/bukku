import Head from "next/head";

import AddTransactionSheet from "~/components/AddTransactionSheet";
import TransactionItem from "~/components/TransactionItem";

import {
  Table,
  TableBody,
  TableHead,
  TableHeader,
  TableRow,
} from "~/components/ui/table";
import { api } from "~/utils/api";
import { numFormat } from "~/utils/formatter";

export default function Home() {
  const { data } = api.transaction.getAllTransactions.useQuery();
  const current = api.transaction.getLatestUnitCost.useQuery();

  return (
    <>
      <Head>
        <title>Bukku</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto flex w-full max-w-screen-lg flex-col justify-center space-y-8 pt-16">
        <h1 className="text-2xl font-bold">Bukku Dashboard</h1>

        <div className="flex w-full space-x-2">
          <div className="bg-card text-card-foreground w-full rounded-xl border shadow">
            <div className="flex flex-row items-center justify-between space-y-0 p-6 pb-2">
              <h3 className="text-sm font-medium tracking-tight">
                Total Amount
              </h3>
            </div>
            <div className="p-6 pt-0">
              <div className="text-2xl font-bold">
                RM
                {current.data ? numFormat(current.data.totalAsset, 2) : "--.--"}
              </div>
            </div>
          </div>
          <div className="bg-card text-card-foreground w-full rounded-xl border shadow">
            <div className="flex flex-row items-center justify-between space-y-0 p-6 pb-2">
              <h3 className="text-sm font-medium tracking-tight">
                Cost Per Unit
              </h3>
            </div>
            <div className="p-6 pt-0">
              <div className="text-2xl font-bold">
                RM
                {current.data
                  ? numFormat(current.data.costPerUnit, 2)
                  : "--.--"}
              </div>
            </div>
          </div>
          <div className="bg-card text-card-foreground w-full rounded-xl border shadow">
            <div className="flex flex-row items-center justify-between space-y-0 p-6 pb-2">
              <h3 className="text-sm font-medium tracking-tight">Inventory</h3>
            </div>
            <div className="p-6 pt-0">
              <div className="text-2xl font-bold">
                {current.data ? numFormat(current.data.totalQuantity, 0) : 0}
              </div>
            </div>
          </div>
        </div>
        <div>
          <div className="flex w-full justify-end">
            <AddTransactionSheet hasTransaction={Boolean(current.data)} />
          </div>
          <div className="mt-2 rounded-lg border">
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>ID</TableHead>
                  <TableHead>Date</TableHead>
                  <TableHead>Type</TableHead>
                  <TableHead className="text-right">Quantity</TableHead>
                  <TableHead className="text-right">Price</TableHead>
                  <TableHead className="text-right">Total Amount</TableHead>
                  <TableHead className="text-right">Action</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {data?.map((item) => (
                  <TransactionItem key={item.id} item={item} />
                ))}
              </TableBody>
            </Table>
          </div>
        </div>
      </main>
    </>
  );
}
